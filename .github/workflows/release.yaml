name: Release

on:
  push:
    branches: [master]

jobs:
  release:
    strategy:
      matrix:
        environment: [prod-sg]
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: yarn

      - name: Build
        run: |
          yarn install --frozen-lockfile
          yarn build
          tar zcf build.tar.gz -C public .

      - name: Deploy
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_IP: ${{ secrets.DEPLOY_IP }}
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          CA_CERT: ${{ secrets.CA_CERT }}
          CLIENT_CERT: ${{ secrets.CLIENT_CERT }}
          CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
        run: |
          PROJECT=$(echo -n "$GITHUB_REPOSITORY" | cut -d'/' -f2)
          SHORT_SHA=${GITHUB_SHA:0:8}

          echo -n "$CA_CERT" > $RUNNER_TEMP/ca.crt
          echo -n "$CLIENT_CERT" > $RUNNER_TEMP/client.crt
          echo -n "$CLIENT_KEY" > $RUNNER_TEMP/client.key

          curl -X POST \
            -F "project=$PROJECT" \
            -F "short_sha=$SHORT_SHA" \
            -F "file=@build.tar.gz" \
            --cacert $RUNNER_TEMP/ca.crt \
            --cert $RUNNER_TEMP/client.crt \
            --key $RUNNER_TEMP/client.key \
            --resolve $DEPLOY_HOST:$DEPLOY_PORT:$DEPLOY_IP \
            https://$DEPLOY_HOST:$DEPLOY_PORT/deploy/mtls
